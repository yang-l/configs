---
version: '3.8'

services:
  ansible:
    build:
      args:
        ANSIBLE_RELEASE: "${ANSIBLE_VERSION}"
        BASE_VERSION: "${PYTHON_VERSION}"
      context: .
      dockerfile: Dockerfile.ansible
    image: ops/ansible:latest
    volumes:
      - $PWD:/app
    working_dir: /app
    entrypoint: ['ansible']

  aws:
    build:
      args:
        BASE_VERSION: "${AWS_CLI_VERSION}"
        BUILD_BASE_VERSION: "${ALPINE_VERSION}"
        AWS_VAULT_RELEASE: "${AWS_VAULT_VERSION}"
        IAMY_RELEASE: "${IAMY_VERSION}"
      context: .
      dockerfile: Dockerfile.aws
    environment:
      - AWS_VAULT_BACKEND=file
      - AWS_VAULT_FILE_PASSPHRASE=Ch@n93m4
      - AWS_SESSION_TOKEN_TTL=2h
      - AWS_ASSUME_ROLE_TTL=15m
    image: ops/awscli:latest
    volumes:
      - $HOME/.aws:/root/.aws
      - $HOME/.awsvault:/root/.awsvault:ro
      - $PWD:/app
    working_dir: /app
    entrypoint: ['aws']

  sam:
    build:
      args:
        BASE_VERSION: 3.8-alpine
      context: .
      dockerfile: Dockerfile.aws-sam
    image: ops/awssamcli:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - $HOME/.aws:/root/.aws:ro
      - $PWD:/app
    working_dir: /app
    entrypoint: ['sam']

  k8s: &k8s_base
    build:
      args:
        BASE_VERSION: "${ALPINE_VERSION}"
        K8S_RELEASE: "${K8S_RELEASE_VERSION}"
        HELM_RELEASE: "${HELM_RELEASE_VERSION}"
      context: .
      dockerfile: Dockerfile.k8s
    image: ops/k8scli:latest
    working_dir: /app

  kubectl:
    <<: *k8s_base
    environment:
      - KUBECONFIG=/root/.kube/config
    volumes:
      - $HOME/.kube:/root/.kube:ro
      - $PWD:/app
    entrypoint: ['/kubectl']

  kubeadm:
    <<: *k8s_base
    environment:
      - KUBECONFIG=/root/.kube/config
    volumes:
      - $HOME/.kube:/root/.kube:ro
      - $PWD:/app
    entrypoint: ['/kubeadm']

  helm:
    <<: *k8s_base
    environment:
      - XDG_CACHE_HOME=/root/.cache/helm/
      - XDG_CONFIG_HOME=/root/.config/helm/
      - XDG_DATA_HOME=/root/.local/share/helm/
      - KUBECONFIG=/root/.kube/config
    volumes:
      - $HOME/.config/.helm/cache:/root/.cache/helm
      - $HOME/.config/.helm/config:/root/.config/helm/
      - $HOME/.config/.helm/data:/root/.local/share/helm/
      - $HOME/.kube:/root/.kube:ro
      - $PWD:/app
    entrypoint: ['/helm']

  terraform:
    build:
      args:
        BUILD_BASE_VERSION: "${ALPINE_VERSION}"
        TF_VERSION: "${TERRAFORM_VERSION}"
        TG_VERSION: "${TERRAGRUNT_VERSION}"
        TG_SHA512_SUM: "${TERRAGRUNT_SHA512_SUM}"
      context: .
      dockerfile: Dockerfile.tf
    image: ops/tf:latest
    volumes:
      - $HOME/.aws:/root/.aws:ro
      - ${ROOT_PATH:-.}:/app
    working_dir: /app/${WORK_PATH:-.}
    entrypoint: ['terraform']

  jupyter: &jupyter_base
    build:
      args:
        BASE_VERSION: 'latest'
      context: .
      dockerfile: Dockerfile.jupyter
    image: ops/jupyter:latest
    ports:
      - 8888:8888

  jupyter-console:
    <<: *jupyter_base
    entrypoint: ['jupyter', 'console']

  buildkite: &buildkite_base
    build:
      args:
        BASE_VERSION: "${ALPINE_VERSION}"
        BK_RELEASE: "${BUILDKITE_CLI_VERSION}"
      context: .
      dockerfile: Dockerfile.buildkite
    image: ops/buildkite:latest
    volumes:
      - $HOME/.buildkite:/root/.buildkite
      - $PWD:/app
    working_dir: /app

  bk:
    <<: *buildkite_base
    entrypoint: ['/bk']
