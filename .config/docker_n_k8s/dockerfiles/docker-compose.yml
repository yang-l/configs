---
version: '3.7'

services:
  ansible:
    build:
      args:
        ANSIBLE_RELEASE: '2.8.5'
        BASE_VERSION: '3-alpine'
      context: .
      dockerfile: Dockerfile.ansible
    image: ops/ansible:latest
    volumes:
      - $PWD:/app
    working_dir: /app
    entrypoint: ['ansible']

  aws:
    build:
      args:
        BASE_VERSION: '3-alpine'
      context: .
      dockerfile: Dockerfile.aws
    image: ops/awscli:latest
    volumes:
      - $HOME/.aws:/root/.aws:ro
      - $PWD:/app
    working_dir: /app
    entrypoint: ['aws']

  k8s: &base
    build:
      args:
        BASE_VERSION: '3.10'
        K8S_RELEASE: 'v1.17.0'
        HELM_RELEASE: 'v3.0.2'
      context: .
      dockerfile: Dockerfile.k8s
    environment:
      - KUBECONFIG=/root/.kube/config
    image: ops/k8scli:latest
    volumes:
      - $HOME/.kube:/root/.kube:ro
      - $PWD:/app
    working_dir: /app

  kubectl:
    <<: *base
    entrypoint: ['/kubectl']

  helm:
    <<: *base
    environment:
      - XDG_CACHE_HOME=/root/.cache/helm/
      - XDG_CONFIG_HOME=/root/.config/helm/
      - XDG_DATA_HOME=/root/.local/share/helm/
    volumes:
      - $HOME/.helm/cache:/root/.cache/helm
      - $HOME/.helm/config:/root/.config/helm/
      - $HOME/.helm/data:/root/.local/share/helm/
    entrypoint: ['/helm']

  terraform:
    image: hashicorp/terraform:0.12.12
    volumes:
      - $PWD:/app
    working_dir: /app
    entrypoint: ['terraform']
