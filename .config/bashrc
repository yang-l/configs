# history
shopt -s extglob
export HISTIGNORE="&:ls*( )?(-l?(a?(h))):exit:clear:history*:top:git*( )?(?(diff)|?(df?(?(c?(s))|?(s)))|?(po*( )?(-f))|?(l?(?(og)|?(l)|?(o)|?(c?(l))|?(u)|?(s?(-files))))|?(s?(?(tatus)|?(t)))|?(br?(anch))|?(sh?(ow))?(*()HEAD*)|?(fixup)|?(squash)|?(pull)|?(push)|?(ri*( )HEAD*)|?(a*( )*)|?(reflog)|?(m))*( ):docker*( )?(?(ps -a)|?(images)|?(info)|?(rmi*)|?(rm*)):?(p)kill*:k9?(+( )*):.+( )~/.bash*:stty*:tmux?(+( )ls*( )*):?(terraform|tf)?(+( )?(init|get|plan|apply|destroy)):e?(c)[ftk]"
unset HISTSIZE
unset HISTFILESIZE
export HISTSIZE=500000
export HISTFILESIZE=$((HISTSIZE * 2))
export HISTTIMEFORMAT="%y-%m-%d %H:%M:%S | "
shopt -s histappend cmdhist
export PROMPT_COMMAND='history -a; history -c; history -r; history -w; cp ~/.bash_history ~/.config/hist_backup/.bash_history.$(date +%y%m%d)'

# prompt
export PS1='$(printf "%*s\r%s" \
              `# column` "$(( COLUMNS-1 ))" \
              `# right`  "[$(git branch 2>/dev/null | grep '^*' | sed s/..//)] $(date +"%y-%m-%d %H:%M:%S")" \
              `# left`   "$(echo -en "[$?] $( [ -n "${_OLD_VIRTUAL_PS1:-}" ] && tput bold && echo -en "venv|$(basename ${VIRTUAL_ENV}) " && tput sgr0 `# virtualenv prompt`)\u@\h \w $( [ -n "${AWS_VAULT:-}" ] && tput bold && echo -en "aws-vault|${AWS_VAULT} " && tput sgr0 `# aws-vault prompt`)\$ ")" \
           )'

# keychain
KEYCHAIN=~/.config/keychain/keychain
if [ -f "${KEYCHAIN}" ]
then
    eval $("${KEYCHAIN}" -q --eval `find ~/.ssh -type f -name "*.pem"`)
    [ -f '~/.keychain/$HOSTNAME-sh' ] && . ~/.keychain/$HOSTNAME-sh
    [ -f '~/.keychain/$HOSTNAME-sh-gpg' ] && . ~/.keychain/$HOSTNAME-sh-gpg
fi

# i-search
stty -ixon

# git-completion
[ -f ~/.git-completion.bash ] && source ~/.git-completion.bash

# macOS
if [ $(uname) == 'Darwin' ]; then
    export CLICOLOR=1
    TIMEOUT_CMD="/opt/local/bin/gtimeout 2"
fi

# emacs terminal emulators inside macOS
if [[ -n ${INSIDE_EMACS:-} && $(uname) == 'Darwin' ]]; then
   stty ek
fi

# proloading cli containers in k8s
#export K8S_PROLOAD_AWSCLI_CONTAINER_ID=$($TIMEOUT_CMD docker ps -f status=running -f name=aws-cli_cli-utils --format "{{.ID}}")
#export K8S_PROLOAD_K8SCLI_CONTAINER_ID=$($TIMEOUT_CMD docker ps -f status=running -f name=k8s-cli_cli-utils --format "{{.ID}}")

# bash-completion
if [ -f /opt/local/etc/profile.d/bash_completion.sh ]; then
    . /opt/local/etc/profile.d/bash_completion.sh
fi
## kubectl -> sed 's/"kubectl /"docker exec \$K8S_PROLOAD_K8SCLI_CONTAINER_ID \/kubectl /g' <(kubectl completion bash) > ~/.kube/kube-autocomplete
##      or -> kubectl completion bash > ~/.kube/kube-autocomplete
##            sed -i'' -e 's/"kubectl /"docker exec \$K8S_PROLOAD_K8SCLI_CONTAINER_ID \/kubectl /g' ~/.kube/kube-autocomplete
## kubeadm -> kubeadm completion bash > ~/.config/.k8s/kubeadm-autocomplete
## helm -> helm completion bash > ~/.config/.helm/helm-autocomplete

# MacPorts
export PATH="/opt/local/bin:/opt/local/sbin:$PATH"

# asdf
## git clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch v0.8.1
[ -f ~/.asdf/asdf.sh ] && source ~/.asdf/asdf.sh
[ -f ~/.asdf/completions/asdf.bash ] && source ~/.asdf/completions/asdf.bash
export DIRENV_LOG_FORMAT=""
eval "$(asdf exec direnv hook bash)"

# aws-vault
[ -x ~/.config/local/bin/aws-vault ] && eval "$(~/.config/local/bin/aws-vault --completion-script-bash)"

# local installed binary
export PATH="${HOME}/.config/local/bin:$PATH"

# fzf
export FZF_DEFAULT_COMMAND='rg --files --hidden --no-ignore-vcs --no-messages --smart-case'
export FZF_DEFAULT_OPTS='--height 30% --layout=reverse --border --info=inline --multi'
export FZF_CTRL_R_OPTS='--preview "builtin history -r "${HOME}/.bash_history" && builtin fc -l $(expr {1} - $(expr $FZF_PREVIEW_LINES / 2)) $(expr {1} + $(expr $FZF_PREVIEW_LINES / 2))"' # show the history around the matched one in the preview window
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
source /opt/local/share/fzf/shell/key-bindings.bash
source /opt/local/share/fzf/shell/completion.bash
